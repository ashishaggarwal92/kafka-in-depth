
# Consumer related properties
# here we need to add all brokers running as a part of kafka cluster
#spring.kafka.consumer.bootstrap-servers: localhost:9092,localhost9093
spring.kafka.consumer.bootstrap-servers: localhost:9092

# consumer group
spring.kafka.consumer.group-id: myGroup

#
spring.kafka.consumer.auto-offset-reset: earliest

spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer

#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

#
spring.kafka.consumer.properties.spring.json.trusted.packages=*


# Producer related properties
# here we need to add all brokers running as a part of kafka cluster
spring.kafka.producer.bootstrap-servers: localhost:9092

spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer

#spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer


spring.kafka.topic.name=myTopic

spring.kafka.topic-json.name=myTopic_json

server.port = 8090



#### prod project prop
# SSL
kafka.ssl.truststore.location=${TRUSTSTORE:file:src/main/resources/certs/prod/truststore_PROD.jks}
kafka.ssl.truststore.password=${TRUSTSTOREPASS:ENC()}
kafka.ssl.truststore.type=JKS
kafka.ssl.keystore.location=${KEYSTORE:file:src/main/resources/certs/prod/keystore_PROD.p12}
kafka.ssl.keystore.password=${KEYSTOREPASS:ENC()}
kafka.ssl.keystore.type=PKCS12
kafka.ssl.endpoint.identification.algorithm=
kafka.ssl.enabled=true

# KAFKA COnfig
kafka.bootstrap.server=devserver1.home.net:9093,devserver2.home.net:9093,devserver3.home.net:9093
kafka.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.key.serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.value.serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.auto.flush=true
kafka.home.consumer.group.id=myGroup1
kafka.home.consumer.auto-offset.reset=earliest

# Consumer
kafka.home.consumer.inbound.topic=topic1

# Producer
kafka.home.producer.outbound.topic=topic1
